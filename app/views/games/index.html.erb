<h1>ピンポンゲーム</h1>
 <div id= "canvas-wrapper">
  <canvas id="myCanvas" width="480" height="320"></canvas>
 </div>

 <script>
    var canvas = document.getElementById("myCanvas");
    var ctx = canvas.getContext("2d");
    var ballRadius = 10;
    var x = canvas.width/2;
    var y = canvas.height-30;
    var dx = 2;
    var dy = -2;

    var paddleHeight = 10;
    var paddleWidth = 120;
    var paddleX = (canvas.width-paddleWidth)/2;
    var rightPressed = false;
    var leftPressed = false;

    document.addEventListener("keydown", keyDownHandler, false);
    document.addEventListener("keyup", keyUpHandler, false);

    function keyDownHandler(e) {
      if(e.key == "Right" || e.key == "ArrowRight") {
        rightPressed = true;
      }
      else if(e.key == "Left" || e.key == "ArrowLeft") {
        leftPressed = true;
      }
    }

    function keyUpHandler(e) {
      if(e.key == "Right" || e.key == "ArrowRight") {
        rightPressed = false;
      }
      else if(e.key == "Left" || e.key == "ArrowLeft") {
        leftPressed = false;
      }
    }

      function drawBall() {
        ctx.beginPath();
        ctx.arc(x, y, ballRadius, 0, Math.PI*2);
        ctx.fillStyle = "red";
        ctx.fill();
        ctx.closePath();
      }

    function drawPaddle() {
        ctx.beginPath();
        ctx.rect(paddleX, canvas.height-paddleHeight, paddleWidth, paddleHeight);
        ctx.fillStyle = "blue";
        ctx.fill();
        ctx.closePath();
    }

    function draw() {
       //ボールの移動軌跡を残さないために
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      drawBall();
      // 枠外にはみ出たら
      if(x + dx > canvas.width-ballRadius || x + dx < ballRadius) {
        console.log('反転前 dx:' + dx);
        dx = -dx;
        console.log('反転後 dx:' + dx);
      }
      // if(y + dy > canvas.height-ballRadius || y + dy < ballRadius) {
      //   console.log('反転前 dy:' + dy);
      //   dy =  -dy;
      //   console.log('反転後 dy:' + dy);
      // }
      console.log('y値:' + y + dy);
      if(y + dy < ballRadius) {
        dy =  -dy;
      } else if(y + dy > canvas.height-paddleHeight-ballRadius) {
        if(x > paddleX && x < paddleX + paddleWidth) {
          dy = -dy;
        }
        else {
          alert("GAME OVER");
          document.location.reload();
          clearInterval(interval);
        }
      }
      x += dx;
      y += dy;

      drawPaddle();
      if(rightPressed) {
        paddleX += 20;
          console.log('→ 右移動中 横の位置 paddleX :' + paddleX)
          if (paddleX + paddleWidth > canvas.width){
            paddleX = canvas.width - paddleWidth;
          }
      }
      else if(leftPressed) {
        paddleX -= 20;
          console.log('← 左移動中 横の位置 paddleX :' + paddleX)
          if (paddleX < 0){
            paddleX = 0;
          }
      }
    }



    //setInterval() 繰り返し処理、 1 を100にするとゆっくり
    var interval = setInterval(draw, 30);
 </script>